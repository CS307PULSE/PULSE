{"ast":null,"code":"var _jsxFileName = \"D:\\\\Alex\\\\Documents\\\\GitHub\\\\PULSE\\\\Frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport Login from \"./components/Login\";\nimport Profile from \"./components/Profile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoginClicked, setLoginClicked] = useState(false);\n  const handleLoginClick = () => {\n    // Perform any login logic here if needed\n    // For now, just set the state to true to indicate the button is clicked\n    /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this); //Bring to profile page (temporary!, remove when login logic is added)\n    setLoginClicked(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLoginClicked ? null : /*#__PURE__*/_jsxDEV(Login, {\n      onLoginClick: handleLoginClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"a5yZO0pHRJGYlfaDHCckqBc6+9A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Login","Profile","jsxDEV","_jsxDEV","App","_s","isLoginClicked","setLoginClicked","handleLoginClick","fileName","_jsxFileName","lineNumber","columnNumber","children","onLoginClick","_c","$RefreshReg$"],"sources":["D:/Alex/Documents/GitHub/PULSE/Frontend/src/App.js"],"sourcesContent":["import \"./App.css\";\r\nimport { useState } from \"react\";\r\nimport Login from \"./components/Login\";\r\nimport Profile from \"./components/Profile\";\r\n\r\n\r\nfunction App() {\r\n  const [isLoginClicked, setLoginClicked] = useState(false);\r\n\r\n  const handleLoginClick = () => {\r\n    // Perform any login logic here if needed\r\n    // For now, just set the state to true to indicate the button is clicked\r\n    <Profile/> //Bring to profile page (temporary!, remove when login logic is added)\r\n    setLoginClicked(true);\r\n  };\r\n  return (\r\n    <div>\r\n    {isLoginClicked ? null : <Login onLoginClick={handleLoginClick} />}\r\n    <div></div>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,OAAO,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG3C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,cAAc,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEzD,MAAMS,gBAAgB,GAAGA,CAAA,KAAM;IAC7B;IACA;IACA,aAAAL,OAAA,CAACF,OAAO;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAAC;IACXL,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EACD,oBACEJ,OAAA;IAAAU,QAAA,GACCP,cAAc,GAAG,IAAI,gBAAGH,OAAA,CAACH,KAAK;MAACc,YAAY,EAAEN;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClET,OAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAER;AAACP,EAAA,CAfQD,GAAG;AAAAW,EAAA,GAAHX,GAAG;AAiBZ,eAAeA,GAAG;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}